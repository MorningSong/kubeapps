version: 2

workflows:
  version: 2
  kubeapps:
    jobs:
      - test_go
      - test_dashboard
      - build_chartrepo:
          requires:
            - test_go
      - build_chartsvc:
          requires:
            - test_go
      - build_chart_apprepository:
          requires:
            - test_go
      - build_dashboard:
          requires:
            - test_dashboard
      - build_tiller_proxy:
          requires:
            - test_go
      - release:
          requires:
            - build_chartrepo
            - build_chartsvc
            - build_chart_apprepository
            - build_dashboard
            - build_tiller_proxy

## Definitions
install_gcloud_sdk: &install_gcloud_sdk
  run: |
    echo "export PATH=$PATH:${HOME}/google-cloud-sdk/bin" >> $BASH_ENV
    echo "export CLOUDSDK_CORE_DISABLE_PROMPTS=1" >> $BASH_ENV
    if [ ! -d ${HOME}/google-cloud-sdk/bin ]; then
      rm -rf $HOME/google-cloud-sdk;
      curl https://sdk.cloud.google.com | bash;
    fi
install_kubecfg: &install_kubecfg
  run: |
    if ! which kubecfg; then
      wget -O kubecfg https://github.com/ksonnet/kubecfg/releases/download/v0.7.2/kubecfg-$(go env GOOS)-$(go env GOARCH)
      install -m 755 kubecfg $GOPATH/bin/kubecfg
    fi
exports: &exports
  run: |
    # It is not possible to resolve env vars in the environment section:
    # https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
    echo "export VERSION=${CIRCLE_TAG:-build-$CIRCLE_WORKFLOW_ID}" >> $BASH_ENV
build_image: &build_image
  machine: true
  working_directory: /home/circleci/.go_workspace/src/github.com/kubeapps/kubeapps
  environment:
    GOPATH: /home/circleci/.go_workspace
  steps:
    - checkout
    - <<: *exports
    - run: make VERSION="$VERSION" $IMAGE
    - run: |
        if [[ -z "$CIRCLE_PULL_REQUEST" ]]; then
          docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
          if [[ -n "$CIRCLE_TAG" ]]; then 
            docker push $IMAGE:$VERSION
          fi
          if [[ "$CIRCLE_BRANCH" == "master"  ]]; then
            docker tag $IMAGE:$VERSION $IMAGE:latest
            docker push $IMAGE:latest
          fi
        fi
###

jobs:
  test_go:
    working_directory: /go/src/github.com/kubeapps/kubeapps
    environment:
      CGO_ENABLED: "0"
    docker:
      - image: circleci/golang:1.9 
    steps:
      - checkout
      - <<: *exports
      - <<: *install_kubecfg
      - <<: *install_gcloud_sdk
      - run: make test
  test_dashboard:
    docker:
      - image: circleci/node:8 
    steps:
      - checkout
      - run: yarn install --cwd=dashboard --frozen-lockfile
      - run: yarn --cwd=dashboard run lint
      - run: yarn --cwd=dashboard run test --maxWorkers=4 --coverage
  build_chartrepo:
    <<: *build_image
    environment:
      - IMAGE=kubeapps/chart-repo
  build_chartsvc:
    <<: *build_image
    environment:
      - IMAGE=kubeapps/chartsvc
  build_chart_apprepository:
    <<: *build_image
    environment:
      - IMAGE=kubeapps/apprepository-controller
  build_dashboard:
    <<: *build_image
    environment:
      - IMAGE=kubeapps/dashboard
  build_tiller_proxy:
    <<: *build_image
    environment:
      - IMAGE=kubeapps/tiller-proxy
  release:
    docker:
      - image: circleci/golang:1.9 
    steps:
      - checkout
      - run: |
          if [[ -n "$CIRCLE_TAG" ]]; then
            REPO_DOMAIN=kubeapps REPO_NAME=kubeapps ./script/create_release.sh ${CIRCLE_TAG}
          fi
